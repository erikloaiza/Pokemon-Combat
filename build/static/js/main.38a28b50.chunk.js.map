{"version":3,"sources":["components/Character/index.js","views/battle/index.js","assets/music.mp3","assets/menu-item.wav","assets/hurt-effective.wav","assets/hurt-ineffective.wav","assets/plattform.png","App.js","serviceWorker.js","index.js"],"names":["Character","props","_this","Object","C_Users_ErikL_Documents_Universidad_Semestre_9_Web_pokemon_combat_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_ErikL_Documents_Universidad_Semestre_9_Web_pokemon_combat_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_ErikL_Documents_Universidad_Semestre_9_Web_pokemon_combat_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","maxLife","name","desc","stName","image","urlImg","def","nuDf","life","nuLife","isOponent","isBeingAttacked","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","src","Platform","style","width","Component","Battle","C_Users_ErikL_Documents_Universidad_Semestre_9_Web_pokemon_combat_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","C_Users_ErikL_Documents_Universidad_Semestre_9_Web_pokemon_combat_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","C_Users_ErikL_Documents_Universidad_Semestre_9_Web_pokemon_combat_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","enemy","player","isEnemyAttacked","isPlayerAttacked","message","isOnGoingAction","isEndGame","nameWinner","_this2","endGame","react__WEBPACK_IMPORTED_MODULE_6___default","id","display","Music","autoPlay","loop","volume","MenuItem","HurtEffective","HurtIneffective","_components_Character__WEBPACK_IMPORTED_MODULE_13__","arAtacks","map","attack","onMouseOver","playMenuSound","onClick","attackEnemy","bind","stAtckName","_this3","https","get","resp","data","on","chunk","dataObjectArray","eval","setState","err","console","log","document","getElementById","play","_this4","damage","nuAtckPower","C_Users_ErikL_Documents_Universidad_Semestre_9_Web_pokemon_combat_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","totalDamage","setTimeout","playInEffectiveHurtSound","playEffectiveHurtSound","attackPlayer","_this5","attacks","Math","floor","random","length","winner","window","location","reload","module","exports","__webpack_require__","p","App","react_default","react_router_dom","react_router","exact","path","component","to","Boolean","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.38a28b50.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\n\r\nimport'./character.css'\r\n\r\nimport Platform from '../../assets/plattform.png'\r\n\r\nclass Character extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            maxLife:100\r\n        }\r\n    }\r\n    render(){\r\n        const name = this.props.desc?this.props.desc.stName:''\r\n        const image = this.props.desc?this.props.desc.urlImg:''\r\n\r\n        const def = this.props.desc?this.props.desc.nuDf:''\r\n        const life = this.props.desc?this.props.desc.nuLife:0;\r\n        const maxLife = this.state.maxLife;\r\n\r\n        const isOponent = this.props.isOponent; //True is aligned to right, False is aligned to lef\r\n\r\n        const isBeingAttacked = this.props.desc?this.props.isBeingAttacked:'';\r\n\r\n        return(\r\n            <div className={\"character-wrapper \" + (isOponent?'enemy':'player')}>\r\n                <div className=\"character\">\r\n                    <img className={\"avatar \" + (isBeingAttacked?'avatar-tilt':'')} src={image}/>\r\n                    <img className=\"plattform\" src={Platform}/>\r\n                </div>\r\n                <div className=\"character-details\">\r\n                    <div>\r\n                        <h2>{name}</h2>\r\n                        <h3>Def: {def}</h3>\r\n                    </div>\r\n                    <div className=\"life\">\r\n                        <div style={{width:life+'%'}} className={life>50?'green':(life>25?'yellow':'orange')}></div>\r\n                    </div>\r\n                    <span>{life}/{maxLife}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Character;","import React,{Component} from'react'\r\nimport https from 'http'\r\nimport './battle.css'\r\n\r\nimport Music from '../../assets/music.mp3'\r\nimport MenuItem from '../../assets/menu-item.wav'\r\nimport HurtEffective from '../../assets/hurt-effective.wav'\r\nimport HurtIneffective from '../../assets/hurt-ineffective.wav'\r\n\r\n\r\nimport Player from '../../components/Character'\r\nclass Battle extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            enemy:{},\r\n            player:{},\r\n            isEnemyAttacked:false,\r\n            isPlayerAttacked:false,\r\n\r\n            message:'Selecciona tu pr√≥ximo ataque',\r\n\r\n            isOnGoingAction:false,\r\n            isEndGame:false,\r\n            \r\n            nameWinner:''\r\n        }\r\n    }\r\n    render(){\r\n        const enemy = this.state.enemy\r\n        const player = this.state.player\r\n\r\n        const isEnemyAttacked=this.state.isEnemyAttacked;\r\n        const isPlayerAttacked=this.state.isPlayerAttacked;\r\n\r\n        \r\n        const isOnGoingAction = this.state.isOnGoingAction;\r\n        const isEndGame = this.state.isEndGame;\r\n\r\n        const nameWinner = this.state.nameWinner;\r\n        \r\n        if(enemy.nuLife<=0||player.nuLife<=0)this.endGame();\r\n        return(\r\n            <div className=\"battle-wrapper\">\r\n              <div id='preventClicks' style={isOnGoingAction?{'display':'block'}:{'display':'none'}}></div>\r\n              <div id='endGame' style={isEndGame?{'display':'flex'}:{'display':'none'}}>\r\n                <h2>{nameWinner} ha ganado la batalla</h2>\r\n              </div>\r\n\r\n              <audio src={Music} autoPlay loop volume='0.0'></audio>\r\n              <audio src={MenuItem} id=\"Sound-item\"></audio>\r\n              <audio src={HurtEffective} id=\"Sound-hurt-effective\"></audio>\r\n              <audio src={HurtIneffective} id=\"Sound-hurt-ineffective\"></audio>\r\n\r\n              <Player desc={enemy} isOponent isBeingAttacked={isEnemyAttacked}/>\r\n              <Player desc={player} isBeingAttacked={isPlayerAttacked}/>\r\n\r\n\r\n              <div className=\"attacks-gui\">\r\n                    <h1>{this.state.message}</h1>\r\n                    <div className=\"attacks\">\r\n                        {player.arAtacks?player.arAtacks.map(attack=>{\r\n                            return <div className=\"attack\" \r\n                            onMouseOver={this.playMenuSound}\r\n                            onClick={this.attackEnemy.bind(this,attack)}\r\n                            >\r\n                            {attack.stAtckName}</div>\r\n                        }):''}\r\n                    </div>      \r\n              </div>\r\n            </div>\r\n        );\r\n    }\r\n    componentDidMount(){\r\n        https.get('http://www.mocky.io/v2/5cc7aa06320000af39b952af', (resp) => {\r\n            let data = '';\r\n          \r\n            // A chunk of data has been recieved.\r\n            resp.on('data', (chunk) => {\r\n              data += chunk;\r\n            });\r\n            // The whole response has been received. Print out the result.\r\n            resp.on('end', () => {\r\n              var dataObjectArray = eval('(' + data + ')')\r\n              this.setState({\r\n                enemy:dataObjectArray[0],\r\n                player:dataObjectArray[1]\r\n              });\r\n            });\r\n          \r\n          }).on(\"error\", (err) => {\r\n            console.log(\"Error: \" + err.message);\r\n          });\r\n    }\r\n    playMenuSound(){\r\n      var sound = document.getElementById('Sound-item');\r\n      sound.play();\r\n    }\r\n    playEffectiveHurtSound(){\r\n      var sound = document.getElementById('Sound-hurt-effective');\r\n      sound.play();\r\n    }\r\n    playInEffectiveHurtSound(){\r\n      var sound = document.getElementById('Sound-hurt-ineffective');\r\n      sound.play();\r\n    }\r\n    attackEnemy(attack){\r\n      const damage = attack.nuAtckPower;\r\n      const name = attack.stAtckName;\r\n\r\n      const {enemy}={...this.state}\r\n\r\n      const def = enemy.nuDf;\r\n    \r\n      const totalDamage = (damage-def>0)?damage-def:5;\r\n\r\n      this.setState({\r\n        message: this.state.player.stName+' us√≥ '+name,\r\n        isOnGoingAction:true,\r\n        isEnemyAttacked:true\r\n      })\r\n      setTimeout(()=>{\r\n          enemy.nuLife -=totalDamage;\r\n          setTimeout(()=>this.setState({isEnemyAttacked:false}),1000)\r\n          this.setState({\r\n            enemy:enemy\r\n          })\r\n          if(totalDamage==5){\r\n            setTimeout(()=>this.setState({message:\"No es muy efectivo\"}),1000)\r\n            this.playInEffectiveHurtSound();\r\n          }\r\n          else{\r\n            this.playEffectiveHurtSound()\r\n          }\r\n        setTimeout(this.attackPlayer.bind(this),2000);\r\n      },1000);\r\n      \r\n    }\r\n    attackPlayer(){\r\n      const attacks = this.state.enemy.arAtacks\r\n      const attack = attacks[Math.floor(Math.random()*attacks.length)];\r\n      const damage = attack.nuAtckPower;\r\n      const name = attack.stAtckName;\r\n\r\n      const {player}={...this.state}\r\n\r\n      const def = player.nuDf;\r\n    \r\n      const totalDamage = (damage-def>0)?damage-def:5;\r\n\r\n      this.setState({\r\n        message:this.state.enemy.stName+' us√≥ '+name,\r\n      })\r\n\r\n      setTimeout(()=>{\r\n        player.nuLife -=totalDamage;\r\n        this.setState({\r\n          player:player,\r\n          isPlayerAttacked:true\r\n        })\r\n        if(totalDamage==5){\r\n          this.setState({message:\"No es muy efectivo\"})\r\n          this.playInEffectiveHurtSound();\r\n        }\r\n        else{\r\n          this.playEffectiveHurtSound()\r\n        }\r\n        setTimeout(()=>this.setState({isPlayerAttacked:false}),1000)\r\n\r\n        setTimeout(()=>{\r\n          this.setState({\r\n            message:'Selecciona tu pr√≥ximo ataque',\r\n            isOnGoingAction:false\r\n          })\r\n        },1000);\r\n      },2000);\r\n    }\r\n    endGame(){\r\n      if(this.state.isEndGame!=true){\r\n        var winner = (this.state.enemy.nuLife<=0)?this.state.player.stName:this.state.enemy.stName\r\n        this.setState({\r\n          nameWinner:winner,\r\n          isEndGame:true\r\n        })\r\n        setTimeout(window.location.reload.bind(window.location), 5000);\r\n      }\r\n    }\r\n} \r\n\r\nexport default Battle;\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/music.f502ab8c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/menu-item.fc02613e.wav\";","module.exports = __webpack_public_path__ + \"static/media/hurt-effective.7c1c64de.wav\";","module.exports = __webpack_public_path__ + \"static/media/hurt-ineffective.14ae23ec.wav\";","module.exports = __webpack_public_path__ + \"static/media/plattform.7cc65323.png\";","import React from 'react';\n\nimport {HashRouter as Router, Route, Redirect, Switch} from 'react-router-dom'\nimport Battle from './views/battle';\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/Battle\" component={Battle}/>\n        <Redirect to=\"/Battle\"/>\n      </Switch>\n    </Router>\n  );  \n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}